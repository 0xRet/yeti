import logging
from datetime import timedelta, datetime
from core.schemas import observable
from core.schemas import task
from core import taskmanager
import pandas as pd
from io import StringIO


class AlienVaultIPReputation(task.FeedTask):
    SOURCE = "http://reputation.alienvault.com/reputation.data"
    _defaults = {
        "frequency": timedelta(hours=4),
        "name": "AlienVaultIPReputation",
        "description": "Reputation IP generated by Alienvault",
    }

    def run(self):
        response = self._make_request(self.SOURCE, verify=True)
        if response:
            data = response.text

            df = pd.read_csv(
                StringIO(data),
                delimiter="#",
                names=[
                    "IP",
                    "number_1",
                    "number_2",
                    "Tag",
                    "Country",
                    "City",
                    "Coord",
                    "number_3",
                ],
            )

            for _, item in df.iterrows():
                self.analyze(item)

    def analyze(self, item):
        try:
            context = dict(source=self.name)

            ip_str = item["IP"]
            category = item["Tag"]
            country = item["Country"]
            ip = None
            try:
                ip = observable.Observable.find(value=ip_str)
                if not ip:
                    ip = observable.Observable(value=ip_str, type="ip").save()
            except Exception as e:
                logging.error("Error to find the ip %s %s" % (ip_str, e))
                return False

            context["country"] = country
            context["threat"] = category
            context["reliability"] = item["number_1"]
            context["risk"] = item["number_2"]
            context["date_added"] = datetime.utcnow()

            ip.tag([category])
            ip.add_context(self.name, context)

        except Exception as e:
            logging.error("Error to process the item %s %s" % (item, e))
            return False
        return True


taskmanager.TaskManager.register_task(AlienVaultIPReputation)
